/**
 * DRES Client API
 * Client API for DRES (Distributed Retrieval Evaluation Server), Version 2.0.0-RC4
 *
 * The version of the OpenAPI document: 2.0.0-RC4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiEvaluationStatus from './ApiEvaluationStatus';
import ApiTaskStatus from './ApiTaskStatus';

/**
 * The ApiEvaluationState model module.
 * @module model/ApiEvaluationState
 * @version 2.0.0-RC4
 */
class ApiEvaluationState {
    /**
     * Constructs a new <code>ApiEvaluationState</code>.
     * @alias module:model/ApiEvaluationState
     * @param evaluationId {String} 
     * @param evaluationStatus {module:model/ApiEvaluationStatus} 
     * @param taskStatus {module:model/ApiTaskStatus} 
     * @param timeLeft {Number} 
     * @param timeElapsed {Number} 
     */
    constructor(evaluationId, evaluationStatus, taskStatus, timeLeft, timeElapsed) { 
        
        ApiEvaluationState.initialize(this, evaluationId, evaluationStatus, taskStatus, timeLeft, timeElapsed);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, evaluationId, evaluationStatus, taskStatus, timeLeft, timeElapsed) { 
        obj['evaluationId'] = evaluationId;
        obj['evaluationStatus'] = evaluationStatus;
        obj['taskStatus'] = taskStatus;
        obj['timeLeft'] = timeLeft;
        obj['timeElapsed'] = timeElapsed;
    }

    /**
     * Constructs a <code>ApiEvaluationState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiEvaluationState} obj Optional instance to populate.
     * @return {module:model/ApiEvaluationState} The populated <code>ApiEvaluationState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiEvaluationState();

            if (data.hasOwnProperty('evaluationId')) {
                obj['evaluationId'] = ApiClient.convertToType(data['evaluationId'], 'String');
            }
            if (data.hasOwnProperty('evaluationStatus')) {
                obj['evaluationStatus'] = ApiEvaluationStatus.constructFromObject(data['evaluationStatus']);
            }
            if (data.hasOwnProperty('taskId')) {
                obj['taskId'] = ApiClient.convertToType(data['taskId'], 'String');
            }
            if (data.hasOwnProperty('taskStatus')) {
                obj['taskStatus'] = ApiTaskStatus.constructFromObject(data['taskStatus']);
            }
            if (data.hasOwnProperty('taskTemplateId')) {
                obj['taskTemplateId'] = ApiClient.convertToType(data['taskTemplateId'], 'String');
            }
            if (data.hasOwnProperty('timeLeft')) {
                obj['timeLeft'] = ApiClient.convertToType(data['timeLeft'], 'Number');
            }
            if (data.hasOwnProperty('timeElapsed')) {
                obj['timeElapsed'] = ApiClient.convertToType(data['timeElapsed'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiEvaluationState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiEvaluationState</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiEvaluationState.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['evaluationId'] && !(typeof data['evaluationId'] === 'string' || data['evaluationId'] instanceof String)) {
            throw new Error("Expected the field `evaluationId` to be a primitive type in the JSON string but got " + data['evaluationId']);
        }
        // ensure the json data is a string
        if (data['taskId'] && !(typeof data['taskId'] === 'string' || data['taskId'] instanceof String)) {
            throw new Error("Expected the field `taskId` to be a primitive type in the JSON string but got " + data['taskId']);
        }
        // ensure the json data is a string
        if (data['taskTemplateId'] && !(typeof data['taskTemplateId'] === 'string' || data['taskTemplateId'] instanceof String)) {
            throw new Error("Expected the field `taskTemplateId` to be a primitive type in the JSON string but got " + data['taskTemplateId']);
        }

        return true;
    }


}

ApiEvaluationState.RequiredProperties = ["evaluationId", "evaluationStatus", "taskStatus", "timeLeft", "timeElapsed"];

/**
 * @member {String} evaluationId
 */
ApiEvaluationState.prototype['evaluationId'] = undefined;

/**
 * @member {module:model/ApiEvaluationStatus} evaluationStatus
 */
ApiEvaluationState.prototype['evaluationStatus'] = undefined;

/**
 * @member {String} taskId
 */
ApiEvaluationState.prototype['taskId'] = undefined;

/**
 * @member {module:model/ApiTaskStatus} taskStatus
 */
ApiEvaluationState.prototype['taskStatus'] = undefined;

/**
 * @member {String} taskTemplateId
 */
ApiEvaluationState.prototype['taskTemplateId'] = undefined;

/**
 * @member {Number} timeLeft
 */
ApiEvaluationState.prototype['timeLeft'] = undefined;

/**
 * @member {Number} timeElapsed
 */
ApiEvaluationState.prototype['timeElapsed'] = undefined;






export default ApiEvaluationState;

