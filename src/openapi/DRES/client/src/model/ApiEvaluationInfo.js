/**
 * DRES Client API
 * Client API for DRES (Distributed Retrieval Evaluation Server), Version 2.0.0-RC4
 *
 * The version of the OpenAPI document: 2.0.0-RC4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiEvaluationStatus from './ApiEvaluationStatus';
import ApiEvaluationType from './ApiEvaluationType';
import ApiRunProperties from './ApiRunProperties';
import ApiTaskTemplateInfo from './ApiTaskTemplateInfo';
import ApiTeamInfo from './ApiTeamInfo';

/**
 * The ApiEvaluationInfo model module.
 * @module model/ApiEvaluationInfo
 * @version 2.0.0-RC4
 */
class ApiEvaluationInfo {
    /**
     * Constructs a new <code>ApiEvaluationInfo</code>.
     * @alias module:model/ApiEvaluationInfo
     * @param id {String} 
     * @param name {String} 
     * @param type {module:model/ApiEvaluationType} 
     * @param status {module:model/ApiEvaluationStatus} 
     * @param properties {module:model/ApiRunProperties} 
     * @param templateId {String} 
     * @param teams {Array.<module:model/ApiTeamInfo>} 
     * @param taskTemplates {Array.<module:model/ApiTaskTemplateInfo>} 
     */
    constructor(id, name, type, status, properties, templateId, teams, taskTemplates) { 
        
        ApiEvaluationInfo.initialize(this, id, name, type, status, properties, templateId, teams, taskTemplates);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, name, type, status, properties, templateId, teams, taskTemplates) { 
        obj['id'] = id;
        obj['name'] = name;
        obj['type'] = type;
        obj['status'] = status;
        obj['properties'] = properties;
        obj['templateId'] = templateId;
        obj['teams'] = teams;
        obj['taskTemplates'] = taskTemplates;
    }

    /**
     * Constructs a <code>ApiEvaluationInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiEvaluationInfo} obj Optional instance to populate.
     * @return {module:model/ApiEvaluationInfo} The populated <code>ApiEvaluationInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiEvaluationInfo();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiEvaluationType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiEvaluationStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiRunProperties.constructFromObject(data['properties']);
            }
            if (data.hasOwnProperty('templateId')) {
                obj['templateId'] = ApiClient.convertToType(data['templateId'], 'String');
            }
            if (data.hasOwnProperty('templateDescription')) {
                obj['templateDescription'] = ApiClient.convertToType(data['templateDescription'], 'String');
            }
            if (data.hasOwnProperty('teams')) {
                obj['teams'] = ApiClient.convertToType(data['teams'], [ApiTeamInfo]);
            }
            if (data.hasOwnProperty('taskTemplates')) {
                obj['taskTemplates'] = ApiClient.convertToType(data['taskTemplates'], [ApiTaskTemplateInfo]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiEvaluationInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiEvaluationInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiEvaluationInfo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `properties`
        if (data['properties']) { // data not null
          ApiRunProperties.validateJSON(data['properties']);
        }
        // ensure the json data is a string
        if (data['templateId'] && !(typeof data['templateId'] === 'string' || data['templateId'] instanceof String)) {
            throw new Error("Expected the field `templateId` to be a primitive type in the JSON string but got " + data['templateId']);
        }
        // ensure the json data is a string
        if (data['templateDescription'] && !(typeof data['templateDescription'] === 'string' || data['templateDescription'] instanceof String)) {
            throw new Error("Expected the field `templateDescription` to be a primitive type in the JSON string but got " + data['templateDescription']);
        }
        if (data['teams']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['teams'])) {
                throw new Error("Expected the field `teams` to be an array in the JSON data but got " + data['teams']);
            }
            // validate the optional field `teams` (array)
            for (const item of data['teams']) {
                ApiTeamInfo.validateJSON(item);
            };
        }
        if (data['taskTemplates']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['taskTemplates'])) {
                throw new Error("Expected the field `taskTemplates` to be an array in the JSON data but got " + data['taskTemplates']);
            }
            // validate the optional field `taskTemplates` (array)
            for (const item of data['taskTemplates']) {
                ApiTaskTemplateInfo.validateJSON(item);
            };
        }

        return true;
    }


}

ApiEvaluationInfo.RequiredProperties = ["id", "name", "type", "status", "properties", "templateId", "teams", "taskTemplates"];

/**
 * @member {String} id
 */
ApiEvaluationInfo.prototype['id'] = undefined;

/**
 * @member {String} name
 */
ApiEvaluationInfo.prototype['name'] = undefined;

/**
 * @member {module:model/ApiEvaluationType} type
 */
ApiEvaluationInfo.prototype['type'] = undefined;

/**
 * @member {module:model/ApiEvaluationStatus} status
 */
ApiEvaluationInfo.prototype['status'] = undefined;

/**
 * @member {module:model/ApiRunProperties} properties
 */
ApiEvaluationInfo.prototype['properties'] = undefined;

/**
 * @member {String} templateId
 */
ApiEvaluationInfo.prototype['templateId'] = undefined;

/**
 * @member {String} templateDescription
 */
ApiEvaluationInfo.prototype['templateDescription'] = undefined;

/**
 * @member {Array.<module:model/ApiTeamInfo>} teams
 */
ApiEvaluationInfo.prototype['teams'] = undefined;

/**
 * @member {Array.<module:model/ApiTaskTemplateInfo>} taskTemplates
 */
ApiEvaluationInfo.prototype['taskTemplates'] = undefined;






export default ApiEvaluationInfo;

