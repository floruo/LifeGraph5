/**
 * DRES Client API
 * Client API for DRES (Distributed Retrieval Evaluation Server), Version 2.0.0-RC4
 *
 * The version of the OpenAPI document: 2.0.0-RC4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiEvaluationTemplate from './ApiEvaluationTemplate';
import ApiEvaluationType from './ApiEvaluationType';
import ApiTask from './ApiTask';

/**
 * The ApiEvaluation model module.
 * @module model/ApiEvaluation
 * @version 2.0.0-RC4
 */
class ApiEvaluation {
    /**
     * Constructs a new <code>ApiEvaluation</code>.
     * @alias module:model/ApiEvaluation
     * @param evaluationId {String} 
     * @param name {String} 
     * @param type {module:model/ApiEvaluationType} 
     * @param template {module:model/ApiEvaluationTemplate} 
     * @param created {Number} 
     * @param tasks {Array.<module:model/ApiTask>} 
     */
    constructor(evaluationId, name, type, template, created, tasks) { 
        
        ApiEvaluation.initialize(this, evaluationId, name, type, template, created, tasks);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, evaluationId, name, type, template, created, tasks) { 
        obj['evaluationId'] = evaluationId;
        obj['name'] = name;
        obj['type'] = type;
        obj['template'] = template;
        obj['created'] = created;
        obj['tasks'] = tasks;
    }

    /**
     * Constructs a <code>ApiEvaluation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiEvaluation} obj Optional instance to populate.
     * @return {module:model/ApiEvaluation} The populated <code>ApiEvaluation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiEvaluation();

            if (data.hasOwnProperty('evaluationId')) {
                obj['evaluationId'] = ApiClient.convertToType(data['evaluationId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiEvaluationType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('template')) {
                obj['template'] = ApiEvaluationTemplate.constructFromObject(data['template']);
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Number');
            }
            if (data.hasOwnProperty('started')) {
                obj['started'] = ApiClient.convertToType(data['started'], 'Number');
            }
            if (data.hasOwnProperty('ended')) {
                obj['ended'] = ApiClient.convertToType(data['ended'], 'Number');
            }
            if (data.hasOwnProperty('tasks')) {
                obj['tasks'] = ApiClient.convertToType(data['tasks'], [ApiTask]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiEvaluation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiEvaluation</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiEvaluation.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['evaluationId'] && !(typeof data['evaluationId'] === 'string' || data['evaluationId'] instanceof String)) {
            throw new Error("Expected the field `evaluationId` to be a primitive type in the JSON string but got " + data['evaluationId']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `template`
        if (data['template']) { // data not null
          ApiEvaluationTemplate.validateJSON(data['template']);
        }
        if (data['tasks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tasks'])) {
                throw new Error("Expected the field `tasks` to be an array in the JSON data but got " + data['tasks']);
            }
            // validate the optional field `tasks` (array)
            for (const item of data['tasks']) {
                ApiTask.validateJSON(item);
            };
        }

        return true;
    }


}

ApiEvaluation.RequiredProperties = ["evaluationId", "name", "type", "template", "created", "tasks"];

/**
 * @member {String} evaluationId
 */
ApiEvaluation.prototype['evaluationId'] = undefined;

/**
 * @member {String} name
 */
ApiEvaluation.prototype['name'] = undefined;

/**
 * @member {module:model/ApiEvaluationType} type
 */
ApiEvaluation.prototype['type'] = undefined;

/**
 * @member {module:model/ApiEvaluationTemplate} template
 */
ApiEvaluation.prototype['template'] = undefined;

/**
 * @member {Number} created
 */
ApiEvaluation.prototype['created'] = undefined;

/**
 * @member {Number} started
 */
ApiEvaluation.prototype['started'] = undefined;

/**
 * @member {Number} ended
 */
ApiEvaluation.prototype['ended'] = undefined;

/**
 * @member {Array.<module:model/ApiTask>} tasks
 */
ApiEvaluation.prototype['tasks'] = undefined;






export default ApiEvaluation;

