/**
 * DRES Client API
 * Client API for DRES (Distributed Retrieval Evaluation Server), Version 2.0.0-RC4
 *
 * The version of the OpenAPI document: 2.0.0-RC4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QueryEvent from './QueryEvent';
import RankedAnswer from './RankedAnswer';

/**
 * The QueryResultLog model module.
 * @module model/QueryResultLog
 * @version 2.0.0-RC4
 */
class QueryResultLog {
    /**
     * Constructs a new <code>QueryResultLog</code>.
     * @alias module:model/QueryResultLog
     * @param timestamp {Number} 
     * @param sortType {String} 
     * @param resultSetAvailability {String} 
     * @param results {Array.<module:model/RankedAnswer>} 
     * @param events {Array.<module:model/QueryEvent>} 
     */
    constructor(timestamp, sortType, resultSetAvailability, results, events) { 
        
        QueryResultLog.initialize(this, timestamp, sortType, resultSetAvailability, results, events);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, timestamp, sortType, resultSetAvailability, results, events) { 
        obj['timestamp'] = timestamp;
        obj['sortType'] = sortType;
        obj['resultSetAvailability'] = resultSetAvailability;
        obj['results'] = results;
        obj['events'] = events;
    }

    /**
     * Constructs a <code>QueryResultLog</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryResultLog} obj Optional instance to populate.
     * @return {module:model/QueryResultLog} The populated <code>QueryResultLog</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryResultLog();

            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Number');
            }
            if (data.hasOwnProperty('sortType')) {
                obj['sortType'] = ApiClient.convertToType(data['sortType'], 'String');
            }
            if (data.hasOwnProperty('resultSetAvailability')) {
                obj['resultSetAvailability'] = ApiClient.convertToType(data['resultSetAvailability'], 'String');
            }
            if (data.hasOwnProperty('results')) {
                obj['results'] = ApiClient.convertToType(data['results'], [RankedAnswer]);
            }
            if (data.hasOwnProperty('events')) {
                obj['events'] = ApiClient.convertToType(data['events'], [QueryEvent]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryResultLog</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryResultLog</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of QueryResultLog.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['sortType'] && !(typeof data['sortType'] === 'string' || data['sortType'] instanceof String)) {
            throw new Error("Expected the field `sortType` to be a primitive type in the JSON string but got " + data['sortType']);
        }
        // ensure the json data is a string
        if (data['resultSetAvailability'] && !(typeof data['resultSetAvailability'] === 'string' || data['resultSetAvailability'] instanceof String)) {
            throw new Error("Expected the field `resultSetAvailability` to be a primitive type in the JSON string but got " + data['resultSetAvailability']);
        }
        if (data['results']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['results'])) {
                throw new Error("Expected the field `results` to be an array in the JSON data but got " + data['results']);
            }
            // validate the optional field `results` (array)
            for (const item of data['results']) {
                RankedAnswer.validateJSON(item);
            };
        }
        if (data['events']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['events'])) {
                throw new Error("Expected the field `events` to be an array in the JSON data but got " + data['events']);
            }
            // validate the optional field `events` (array)
            for (const item of data['events']) {
                QueryEvent.validateJSON(item);
            };
        }

        return true;
    }


}

QueryResultLog.RequiredProperties = ["timestamp", "sortType", "resultSetAvailability", "results", "events"];

/**
 * @member {Number} timestamp
 */
QueryResultLog.prototype['timestamp'] = undefined;

/**
 * @member {String} sortType
 */
QueryResultLog.prototype['sortType'] = undefined;

/**
 * @member {String} resultSetAvailability
 */
QueryResultLog.prototype['resultSetAvailability'] = undefined;

/**
 * @member {Array.<module:model/RankedAnswer>} results
 */
QueryResultLog.prototype['results'] = undefined;

/**
 * @member {Array.<module:model/QueryEvent>} events
 */
QueryResultLog.prototype['events'] = undefined;






export default QueryResultLog;

