/**
 * DRES Client API
 * Client API for DRES (Distributed Retrieval Evaluation Server), Version 2.0.0-RC4
 *
 * The version of the OpenAPI document: 2.0.0-RC4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiAnswer from './ApiAnswer';
import ApiVerdictStatus from './ApiVerdictStatus';

/**
 * The ApiAnswerSet model module.
 * @module model/ApiAnswerSet
 * @version 2.0.0-RC4
 */
class ApiAnswerSet {
    /**
     * Constructs a new <code>ApiAnswerSet</code>.
     * @alias module:model/ApiAnswerSet
     * @param id {String} 
     * @param status {module:model/ApiVerdictStatus} 
     * @param taskId {String} 
     * @param answers {Array.<module:model/ApiAnswer>} 
     */
    constructor(id, status, taskId, answers) { 
        
        ApiAnswerSet.initialize(this, id, status, taskId, answers);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, status, taskId, answers) { 
        obj['id'] = id;
        obj['status'] = status;
        obj['taskId'] = taskId;
        obj['answers'] = answers;
    }

    /**
     * Constructs a <code>ApiAnswerSet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiAnswerSet} obj Optional instance to populate.
     * @return {module:model/ApiAnswerSet} The populated <code>ApiAnswerSet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiAnswerSet();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiVerdictStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('taskId')) {
                obj['taskId'] = ApiClient.convertToType(data['taskId'], 'String');
            }
            if (data.hasOwnProperty('answers')) {
                obj['answers'] = ApiClient.convertToType(data['answers'], [ApiAnswer]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiAnswerSet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiAnswerSet</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiAnswerSet.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['taskId'] && !(typeof data['taskId'] === 'string' || data['taskId'] instanceof String)) {
            throw new Error("Expected the field `taskId` to be a primitive type in the JSON string but got " + data['taskId']);
        }
        if (data['answers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['answers'])) {
                throw new Error("Expected the field `answers` to be an array in the JSON data but got " + data['answers']);
            }
            // validate the optional field `answers` (array)
            for (const item of data['answers']) {
                ApiAnswer.validateJSON(item);
            };
        }

        return true;
    }


}

ApiAnswerSet.RequiredProperties = ["id", "status", "taskId", "answers"];

/**
 * @member {String} id
 */
ApiAnswerSet.prototype['id'] = undefined;

/**
 * @member {module:model/ApiVerdictStatus} status
 */
ApiAnswerSet.prototype['status'] = undefined;

/**
 * @member {String} taskId
 */
ApiAnswerSet.prototype['taskId'] = undefined;

/**
 * @member {Array.<module:model/ApiAnswer>} answers
 */
ApiAnswerSet.prototype['answers'] = undefined;






export default ApiAnswerSet;

