/**
 * DRES Client API
 * Client API for DRES (Distributed Retrieval Evaluation Server), Version 2.0.0-RC4
 *
 * The version of the OpenAPI document: 2.0.0-RC4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QueryEventCategory from './QueryEventCategory';

/**
 * The QueryEvent model module.
 * @module model/QueryEvent
 * @version 2.0.0-RC4
 */
class QueryEvent {
    /**
     * Constructs a new <code>QueryEvent</code>.
     * @alias module:model/QueryEvent
     * @param timestamp {Number} 
     * @param category {module:model/QueryEventCategory} 
     * @param type {String} 
     * @param value {String} 
     */
    constructor(timestamp, category, type, value) { 
        
        QueryEvent.initialize(this, timestamp, category, type, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, timestamp, category, type, value) { 
        obj['timestamp'] = timestamp;
        obj['category'] = category;
        obj['type'] = type;
        obj['value'] = value;
    }

    /**
     * Constructs a <code>QueryEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryEvent} obj Optional instance to populate.
     * @return {module:model/QueryEvent} The populated <code>QueryEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryEvent();

            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Number');
            }
            if (data.hasOwnProperty('category')) {
                obj['category'] = QueryEventCategory.constructFromObject(data['category']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryEvent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of QueryEvent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}

QueryEvent.RequiredProperties = ["timestamp", "category", "type", "value"];

/**
 * @member {Number} timestamp
 */
QueryEvent.prototype['timestamp'] = undefined;

/**
 * @member {module:model/QueryEventCategory} category
 */
QueryEvent.prototype['category'] = undefined;

/**
 * @member {String} type
 */
QueryEvent.prototype['type'] = undefined;

/**
 * @member {String} value
 */
QueryEvent.prototype['value'] = undefined;






export default QueryEvent;

