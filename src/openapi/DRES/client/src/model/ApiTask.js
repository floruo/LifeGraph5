/**
 * DRES Client API
 * Client API for DRES (Distributed Retrieval Evaluation Server), Version 2.0.0-RC4
 *
 * The version of the OpenAPI document: 2.0.0-RC4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiAnswerSet from './ApiAnswerSet';

/**
 * The ApiTask model module.
 * @module model/ApiTask
 * @version 2.0.0-RC4
 */
class ApiTask {
    /**
     * Constructs a new <code>ApiTask</code>.
     * @alias module:model/ApiTask
     * @param taskId {String} 
     * @param templateId {String} 
     * @param submissions {Array.<module:model/ApiAnswerSet>} 
     */
    constructor(taskId, templateId, submissions) { 
        
        ApiTask.initialize(this, taskId, templateId, submissions);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, taskId, templateId, submissions) { 
        obj['taskId'] = taskId;
        obj['templateId'] = templateId;
        obj['submissions'] = submissions;
    }

    /**
     * Constructs a <code>ApiTask</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiTask} obj Optional instance to populate.
     * @return {module:model/ApiTask} The populated <code>ApiTask</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiTask();

            if (data.hasOwnProperty('taskId')) {
                obj['taskId'] = ApiClient.convertToType(data['taskId'], 'String');
            }
            if (data.hasOwnProperty('templateId')) {
                obj['templateId'] = ApiClient.convertToType(data['templateId'], 'String');
            }
            if (data.hasOwnProperty('started')) {
                obj['started'] = ApiClient.convertToType(data['started'], 'Number');
            }
            if (data.hasOwnProperty('ended')) {
                obj['ended'] = ApiClient.convertToType(data['ended'], 'Number');
            }
            if (data.hasOwnProperty('submissions')) {
                obj['submissions'] = ApiClient.convertToType(data['submissions'], [ApiAnswerSet]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiTask</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiTask</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiTask.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['taskId'] && !(typeof data['taskId'] === 'string' || data['taskId'] instanceof String)) {
            throw new Error("Expected the field `taskId` to be a primitive type in the JSON string but got " + data['taskId']);
        }
        // ensure the json data is a string
        if (data['templateId'] && !(typeof data['templateId'] === 'string' || data['templateId'] instanceof String)) {
            throw new Error("Expected the field `templateId` to be a primitive type in the JSON string but got " + data['templateId']);
        }
        if (data['submissions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['submissions'])) {
                throw new Error("Expected the field `submissions` to be an array in the JSON data but got " + data['submissions']);
            }
            // validate the optional field `submissions` (array)
            for (const item of data['submissions']) {
                ApiAnswerSet.validateJSON(item);
            };
        }

        return true;
    }


}

ApiTask.RequiredProperties = ["taskId", "templateId", "submissions"];

/**
 * @member {String} taskId
 */
ApiTask.prototype['taskId'] = undefined;

/**
 * @member {String} templateId
 */
ApiTask.prototype['templateId'] = undefined;

/**
 * @member {Number} started
 */
ApiTask.prototype['started'] = undefined;

/**
 * @member {Number} ended
 */
ApiTask.prototype['ended'] = undefined;

/**
 * @member {Array.<module:model/ApiAnswerSet>} submissions
 */
ApiTask.prototype['submissions'] = undefined;






export default ApiTask;

