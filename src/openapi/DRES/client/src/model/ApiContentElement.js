/**
 * DRES Client API
 * Client API for DRES (Distributed Retrieval Evaluation Server), Version 2.0.0-RC4
 *
 * The version of the OpenAPI document: 2.0.0-RC4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiContentType from './ApiContentType';

/**
 * The ApiContentElement model module.
 * @module model/ApiContentElement
 * @version 2.0.0-RC4
 */
class ApiContentElement {
    /**
     * Constructs a new <code>ApiContentElement</code>.
     * @alias module:model/ApiContentElement
     * @param contentType {module:model/ApiContentType} 
     * @param offset {Number} 
     */
    constructor(contentType, offset) { 
        
        ApiContentElement.initialize(this, contentType, offset);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, contentType, offset) { 
        obj['contentType'] = contentType;
        obj['offset'] = offset;
    }

    /**
     * Constructs a <code>ApiContentElement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiContentElement} obj Optional instance to populate.
     * @return {module:model/ApiContentElement} The populated <code>ApiContentElement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiContentElement();

            if (data.hasOwnProperty('contentType')) {
                obj['contentType'] = ApiContentType.constructFromObject(data['contentType']);
            }
            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], 'String');
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiContentElement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiContentElement</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiContentElement.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['content'] && !(typeof data['content'] === 'string' || data['content'] instanceof String)) {
            throw new Error("Expected the field `content` to be a primitive type in the JSON string but got " + data['content']);
        }

        return true;
    }


}

ApiContentElement.RequiredProperties = ["contentType", "offset"];

/**
 * @member {module:model/ApiContentType} contentType
 */
ApiContentElement.prototype['contentType'] = undefined;

/**
 * @member {String} content
 */
ApiContentElement.prototype['content'] = undefined;

/**
 * @member {Number} offset
 */
ApiContentElement.prototype['offset'] = undefined;






export default ApiContentElement;

