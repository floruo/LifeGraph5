/**
 * DRES Client API
 * Client API for DRES (Distributed Retrieval Evaluation Server), Version 2.0.0-RC4
 *
 * The version of the OpenAPI document: 2.0.0-RC4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DresInfo model module.
 * @module model/DresInfo
 * @version 2.0.0-RC4
 */
class DresInfo {
    /**
     * Constructs a new <code>DresInfo</code>.
     * @alias module:model/DresInfo
     * @param version {String} 
     * @param startTime {Number} 
     * @param uptime {Number} 
     */
    constructor(version, startTime, uptime) { 
        
        DresInfo.initialize(this, version, startTime, uptime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, version, startTime, uptime) { 
        obj['version'] = version;
        obj['startTime'] = startTime;
        obj['uptime'] = uptime;
    }

    /**
     * Constructs a <code>DresInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DresInfo} obj Optional instance to populate.
     * @return {module:model/DresInfo} The populated <code>DresInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DresInfo();

            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Number');
            }
            if (data.hasOwnProperty('uptime')) {
                obj['uptime'] = ApiClient.convertToType(data['uptime'], 'Number');
            }
            if (data.hasOwnProperty('os')) {
                obj['os'] = ApiClient.convertToType(data['os'], 'String');
            }
            if (data.hasOwnProperty('jvm')) {
                obj['jvm'] = ApiClient.convertToType(data['jvm'], 'String');
            }
            if (data.hasOwnProperty('args')) {
                obj['args'] = ApiClient.convertToType(data['args'], 'String');
            }
            if (data.hasOwnProperty('cores')) {
                obj['cores'] = ApiClient.convertToType(data['cores'], 'Number');
            }
            if (data.hasOwnProperty('freeMemory')) {
                obj['freeMemory'] = ApiClient.convertToType(data['freeMemory'], 'Number');
            }
            if (data.hasOwnProperty('totalMemory')) {
                obj['totalMemory'] = ApiClient.convertToType(data['totalMemory'], 'Number');
            }
            if (data.hasOwnProperty('load')) {
                obj['load'] = ApiClient.convertToType(data['load'], 'Number');
            }
            if (data.hasOwnProperty('availableSeverThreads')) {
                obj['availableSeverThreads'] = ApiClient.convertToType(data['availableSeverThreads'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DresInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DresInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DresInfo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }
        // ensure the json data is a string
        if (data['os'] && !(typeof data['os'] === 'string' || data['os'] instanceof String)) {
            throw new Error("Expected the field `os` to be a primitive type in the JSON string but got " + data['os']);
        }
        // ensure the json data is a string
        if (data['jvm'] && !(typeof data['jvm'] === 'string' || data['jvm'] instanceof String)) {
            throw new Error("Expected the field `jvm` to be a primitive type in the JSON string but got " + data['jvm']);
        }
        // ensure the json data is a string
        if (data['args'] && !(typeof data['args'] === 'string' || data['args'] instanceof String)) {
            throw new Error("Expected the field `args` to be a primitive type in the JSON string but got " + data['args']);
        }

        return true;
    }


}

DresInfo.RequiredProperties = ["version", "startTime", "uptime"];

/**
 * @member {String} version
 */
DresInfo.prototype['version'] = undefined;

/**
 * @member {Number} startTime
 */
DresInfo.prototype['startTime'] = undefined;

/**
 * @member {Number} uptime
 */
DresInfo.prototype['uptime'] = undefined;

/**
 * @member {String} os
 */
DresInfo.prototype['os'] = undefined;

/**
 * @member {String} jvm
 */
DresInfo.prototype['jvm'] = undefined;

/**
 * @member {String} args
 */
DresInfo.prototype['args'] = undefined;

/**
 * @member {Number} cores
 */
DresInfo.prototype['cores'] = undefined;

/**
 * @member {Number} freeMemory
 */
DresInfo.prototype['freeMemory'] = undefined;

/**
 * @member {Number} totalMemory
 */
DresInfo.prototype['totalMemory'] = undefined;

/**
 * @member {Number} load
 */
DresInfo.prototype['load'] = undefined;

/**
 * @member {Number} availableSeverThreads
 */
DresInfo.prototype['availableSeverThreads'] = undefined;






export default DresInfo;

