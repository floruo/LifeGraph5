/**
 * DRES Client API
 * Client API for DRES (Distributed Retrieval Evaluation Server), Version 2.0.0-RC4
 *
 * The version of the OpenAPI document: 2.0.0-RC4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiEvaluationInfo from '../model/ApiEvaluationInfo';
import ApiEvaluationState from '../model/ApiEvaluationState';
import ErrorStatus from '../model/ErrorStatus';

/**
* Evaluation service.
* @module api/EvaluationApi
* @version 2.0.0-RC4
*/
export default class EvaluationApi {

    /**
    * Constructs a new EvaluationApi. 
    * @alias module:api/EvaluationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getApiV2EvaluationByEvaluationIdInfo operation.
     * @callback module:api/EvaluationApi~getApiV2EvaluationByEvaluationIdInfoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiEvaluationInfo} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns basic information about a specific evaluation.
     * @param {String} evaluationId The evaluation ID.
     * @param {module:api/EvaluationApi~getApiV2EvaluationByEvaluationIdInfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiEvaluationInfo}
     */
    getApiV2EvaluationByEvaluationIdInfo(evaluationId, callback) {
      let postBody = null;
      // verify the required parameter 'evaluationId' is set
      if (evaluationId === undefined || evaluationId === null) {
        throw new Error("Missing the required parameter 'evaluationId' when calling getApiV2EvaluationByEvaluationIdInfo");
      }

      let pathParams = {
        'evaluationId': evaluationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiEvaluationInfo;
      return this.apiClient.callApi(
        '/api/v2/evaluation/{evaluationId}/info', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getApiV2EvaluationByEvaluationIdState operation.
     * @callback module:api/EvaluationApi~getApiV2EvaluationByEvaluationIdStateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiEvaluationState} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the state of a specific evaluation.
     * @param {String} evaluationId The evaluation ID.
     * @param {module:api/EvaluationApi~getApiV2EvaluationByEvaluationIdStateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiEvaluationState}
     */
    getApiV2EvaluationByEvaluationIdState(evaluationId, callback) {
      let postBody = null;
      // verify the required parameter 'evaluationId' is set
      if (evaluationId === undefined || evaluationId === null) {
        throw new Error("Missing the required parameter 'evaluationId' when calling getApiV2EvaluationByEvaluationIdState");
      }

      let pathParams = {
        'evaluationId': evaluationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiEvaluationState;
      return this.apiClient.callApi(
        '/api/v2/evaluation/{evaluationId}/state', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getApiV2EvaluationInfoList operation.
     * @callback module:api/EvaluationApi~getApiV2EvaluationInfoListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ApiEvaluationInfo>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists an overview of all evaluations visible to the current user.
     * @param {module:api/EvaluationApi~getApiV2EvaluationInfoListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ApiEvaluationInfo>}
     */
    getApiV2EvaluationInfoList(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ApiEvaluationInfo];
      return this.apiClient.callApi(
        '/api/v2/evaluation/info/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getApiV2EvaluationStateList operation.
     * @callback module:api/EvaluationApi~getApiV2EvaluationStateListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ApiEvaluationState>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists an overview of all evaluation visible to the current user.
     * @param {module:api/EvaluationApi~getApiV2EvaluationStateListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ApiEvaluationState>}
     */
    getApiV2EvaluationStateList(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ApiEvaluationState];
      return this.apiClient.callApi(
        '/api/v2/evaluation/state/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
